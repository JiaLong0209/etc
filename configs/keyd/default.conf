# Goal:
#
# To create a vi like navigation layer accessible by holding capslock while holding capslock
# otherwise behave like the control key (when held) and escape when tapped.
#
# In essence we want:
#
#  - capslock+h = left
#  - capslock+j = down
#  - capslock+k = up
#  - capslock+l = right
#
#  - capslock+shift+h = C-left
#  - capslock+shift+l = C-right
#  - capslock+shift+j = C-down
#  - capslock+shift+k = C-up
#
#  - capslock = escape (when tapped)
#
# In all other instances capslock should behave as normal control:
#
#  - capslock+a = C-a
#  - capslock+b = C-b
#  - capslock+c = C-c
#  ...
#  - capslock+shift+i = C-S-i
#  - capslock+shift+k = C-S-k
#  ....

# This is achieved by creating a composite layer called [capslock+shift]
# which is activated whenever capslock and shift are simultaneously
# held.


[ids]
*

[main]

# capslock = overload(capslock, esc)
# insert = S-insert
# tab = overload(capslock, tab)

capslock = esc
rightalt = overload(capslock, rightalt)


[capslock:C]
h = left
z = left
# s = left
j = down
k = up
l = right
z = C-left
x = left
c = right
v = C-right

# d = right
# r = insert
# x = delete
d = delete
s = backspace
q = backspace
# z = backspace
p = enter
space = space
backspace = backspace

o = enter
; = enter
' = enter
i = enter
# q = enter
r = enter
y = C-c

u = C-z
# r = C-S-z
# i = C-S-z
a = C-left
b = C-left
# e = C-right
e = C-backspace
f = C-right
w = C-backspace
W = C-S-backspace
# 1 = C-A-left 
# 2 = C-A-left 
# 9 = C-A-left 
[ = C-A-left 

# 0 = C-A-right
# 3 = C-A-right
# 4 = C-A-right
] = C-A-right
\ = C-A-right

# Activates when both capslock and shift is pressed
[capslock+shift]
r = S-insert
# x = C-delete
w = C-S-backspace
# z = C-backspace
q = C-backspace
o = C-S-enter
d = C-delete
s = C-backspace


[meta]

c = enter
esc = enter
x = f2
j = f2

